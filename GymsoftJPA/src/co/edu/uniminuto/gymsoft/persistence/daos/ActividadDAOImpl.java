
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.ActividadDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Actividad;
 
 
 /***************************************************
 *DAO class of actividad table.
 *Generated on Thu Sep 12 21:23:17 COT 2013
 ***************************************************/
 
 
 public class ActividadDAOImpl extends CustomDAOSupport<Actividad, Long>  implements Serializable, ActividadDAO {
 
 
	public ActividadDAOImpl(){
		super( Actividad.class);
	}
 
 /**
 * @return Actividad
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> findAll(){

		Query query = getDAOManager().createQuery(" select t from Actividad t");

		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Actividad
 * @param: Actividad
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public void save(Actividad arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Actividad
 * @param: Actividad
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public void update(Actividad arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Actividad
 * @param: Actividad
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public void delete(Actividad arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Actividad
 * @param: java.lang.Integer Idactividad
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByIdactividad(Integer idactividad){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.idactividad = ?1 ");

		query.setParameter(1, idactividad);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Actividad
 * @param: java.lang.Integer idactividad
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByIdactividad(Integer idactividad, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.idactividad = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idactividad);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Actividad
 * @param: java.lang.String Tipo
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByTipo(String tipo){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.tipo = ?1 ");

		query.setParameter(1, tipo);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Actividad
 * @param: java.lang.String tipo
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByTipo(String tipo, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.tipo = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, tipo);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Actividad
 * @param: java.util.Date Fecha
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByFecha(Date fecha){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.fecha = ?1 ");

		query.setParameter(1, fecha);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Actividad
 * @param: java.util.Date fecha
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByFecha(Date fecha, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.fecha = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, fecha);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Actividad
 * @param: java.lang.Integer SedesIdsedes
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadBySedesIdsedes(Integer sedesIdsedes){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.sedesIdsedes = ?1 ");

		query.setParameter(1, sedesIdsedes);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Actividad
 * @param: java.lang.Integer sedesIdsedes
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadBySedesIdsedes(Integer sedesIdsedes, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.sedesIdsedes = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, sedesIdsedes);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Actividad
 * @param: java.lang.String LugarFisico
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByLugarFisico(String lugarFisico){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.lugarFisico = ?1 ");

		query.setParameter(1, lugarFisico);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Actividad
 * @param: java.lang.String lugarFisico
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Actividad
 */
	public List<Actividad> getActividadByLugarFisico(String lugarFisico, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Actividad t where t.lugarFisico = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, lugarFisico);


		List<Actividad> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
	/**
	 * 
	 * @return el ultimo id ingresado.
	 */
	public int getIdUltimaActividadRegistrada (){
		return (Integer)getDAOManager().createQuery("select max(u.idActividad) from Actividad u").getSingleResult();		 
	}
	
	public Actividad getActividadPorId(Integer id){
		return (Actividad)getDAOManager().createQuery("select a from Actividad a where a.idActividad="+id+"").getSingleResult();
	}
 
 
 }
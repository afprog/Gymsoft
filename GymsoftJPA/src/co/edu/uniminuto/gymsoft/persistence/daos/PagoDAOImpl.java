
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.PagoDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Pago;
 
 
 /***************************************************
 *DAO class of Pago table.
 *Generated on Thu Sep 12 21:23:18 COT 2013
 ***************************************************/
 
 
 public class PagoDAOImpl extends CustomDAOSupport<Pago, Long>  implements Serializable, PagoDAO {
 
 
	public PagoDAOImpl(){
		super( Pago.class);
	}
 
 /**
 * @return Pago
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> findAll(){

		Query query = getDAOManager().createQuery(" select t from Pago t");

		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Pago
 * @param: Pago
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public void save(Pago arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Pago
 * @param: Pago
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public void update(Pago arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Pago
 * @param: Pago
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public void delete(Pago arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Pago
 * @param: java.lang.Integer PagoId
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByPagoId(Integer pagoId){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.pagoId = ?1 ");

		query.setParameter(1, pagoId);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Pago
 * @param: java.lang.Integer pagoId
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByPagoId(Integer pagoId, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.pagoId = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, pagoId);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Pago
 * @param: java.lang.Integer Valor
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByValor(Integer valor){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.valor = ?1 ");

		query.setParameter(1, valor);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Pago
 * @param: java.lang.Integer valor
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByValor(Integer valor, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.valor = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, valor);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Pago
 * @param: java.util.Date Fecha
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByFecha(Date fecha){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.fecha = ?1 ");

		query.setParameter(1, fecha);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Pago
 * @param: java.util.Date fecha
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByFecha(Date fecha, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.fecha = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, fecha);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Pago
 * @param: java.lang.Integer UsuarioIdusuario
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByUsuarioIdusuario(Integer usuarioIdusuario){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.usuarioIdusuario = ?1 ");

		query.setParameter(1, usuarioIdusuario);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Pago
 * @param: java.lang.Integer usuarioIdusuario
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByUsuarioIdusuario(Integer usuarioIdusuario, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.usuarioIdusuario = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, usuarioIdusuario);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Pago
 * @param: java.lang.String EstadoPago
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByEstadoPago(String estadoPago){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.estadoPago = ?1 ");

		query.setParameter(1, estadoPago);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Pago
 * @param: java.lang.String estadoPago
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Pago
 */
	public List<Pago> getPagoByEstadoPago(String estadoPago, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Pago t where t.estadoPago = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, estadoPago);


		List<Pago> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }

 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.MedidaDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Medida;
 
 
 /***************************************************
 *DAO class of Medida table.
 *Generated on Thu Sep 12 21:23:18 COT 2013
 ***************************************************/
 
 
 public class MedidaDAOImpl extends CustomDAOSupport<Medida, Long>  implements Serializable, MedidaDAO {
 
 
	public MedidaDAOImpl(){
		super( Medida.class);
	}
 
 /**
 * @return Medida
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> findAll(){

		Query query = getDAOManager().createQuery(" select t from Medida t");

		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Medida
 * @param: Medida
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public void save(Medida arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Medida
 * @param: Medida
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public void update(Medida arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Medida
 * @param: Medida
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public void delete(Medida arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Medida
 * @param: java.lang.Integer IdMedida
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByIdMedida(Integer idMedida){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.idMedida = ?1 ");

		query.setParameter(1, idMedida);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Medida
 * @param: java.lang.Integer idMedida
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByIdMedida(Integer idMedida, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.idMedida = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idMedida);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Medida
 * @param: java.lang.String Tipo
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByTipo(String tipo){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.tipo = ?1 ");

		query.setParameter(1, tipo);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Medida
 * @param: java.lang.String tipo
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByTipo(String tipo, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.tipo = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, tipo);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Medida
 * @param: java.lang.Double Medida
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByMedida(Double medida){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.medida = ?1 ");

		query.setParameter(1, medida);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Medida
 * @param: java.lang.Double medida
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByMedida(Double medida, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.medida = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, medida);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Medida
 * @param: java.util.Date Fecha
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByFecha(Date fecha){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.fecha = ?1 ");

		query.setParameter(1, fecha);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Medida
 * @param: java.util.Date fecha
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByFecha(Date fecha, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.fecha = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, fecha);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Medida
 * @param: java.lang.Integer UsuarioIdusuario
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByUsuarioIdusuario(Integer usuarioIdusuario){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.usuarioIdusuario = ?1 ");

		query.setParameter(1, usuarioIdusuario);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Medida
 * @param: java.lang.Integer usuarioIdusuario
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Medida
 */
	public List<Medida> getMedidaByUsuarioIdusuario(Integer usuarioIdusuario, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Medida t where t.usuarioIdusuario = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, usuarioIdusuario);


		List<Medida> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }
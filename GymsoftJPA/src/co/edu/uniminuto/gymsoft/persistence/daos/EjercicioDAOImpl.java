
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.EjercicioDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Ejercicio;
 
 
 /***************************************************
 *DAO class of ejercicio table.
 *Generated on Thu Sep 12 21:23:18 COT 2013
 ***************************************************/
 
 
 public class EjercicioDAOImpl extends CustomDAOSupport<Ejercicio, Long>  implements Serializable, EjercicioDAO {
 
 
	public EjercicioDAOImpl(){
		super( Ejercicio.class);
	}
 
 /**
 * @return Ejercicio
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> findAll(){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t");

		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Ejercicio
 * @param: Ejercicio
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public void save(Ejercicio arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Ejercicio
 * @param: Ejercicio
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public void update(Ejercicio arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Ejercicio
 * @param: Ejercicio
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public void delete(Ejercicio arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Ejercicio
 * @param: java.lang.Integer Idejercicio
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByIdejercicio(Integer idejercicio){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.idejercicio = ?1 ");

		query.setParameter(1, idejercicio);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Ejercicio
 * @param: java.lang.Integer idejercicio
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByIdejercicio(Integer idejercicio, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.idejercicio = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idejercicio);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Ejercicio
 * @param: java.lang.String Ejercicio
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByEjercicio(String ejercicio){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.ejercicio = ?1 ");

		query.setParameter(1, ejercicio);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Ejercicio
 * @param: java.lang.String ejercicio
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByEjercicio(String ejercicio, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.ejercicio = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, ejercicio);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Ejercicio
 * @param: java.lang.Integer RutinaIdrutina
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByRutinaIdrutina(Integer rutinaIdrutina){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.rutinaIdrutina = ?1 ");

		query.setParameter(1, rutinaIdrutina);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Ejercicio
 * @param: java.lang.Integer rutinaIdrutina
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByRutinaIdrutina(Integer rutinaIdrutina, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.rutinaIdrutina = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, rutinaIdrutina);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Ejercicio
 * @param: java.lang.Integer CategoriaIdcategoria
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByCategoriaIdcategoria(Integer categoriaIdcategoria){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.categoriaIdcategoria = ?1 ");

		query.setParameter(1, categoriaIdcategoria);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Ejercicio
 * @param: java.lang.Integer categoriaIdcategoria
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByCategoriaIdcategoria(Integer categoriaIdcategoria, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.categoriaIdcategoria = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, categoriaIdcategoria);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Ejercicio
 * @param: java.lang.String Ejerciciocol
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByEjerciciocol(String ejerciciocol){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.ejerciciocol = ?1 ");

		query.setParameter(1, ejerciciocol);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Ejercicio
 * @param: java.lang.String ejerciciocol
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Ejercicio
 */
	public List<Ejercicio> getEjercicioByEjerciciocol(String ejerciciocol, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Ejercicio t where t.ejerciciocol = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, ejerciciocol);


		List<Ejercicio> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }
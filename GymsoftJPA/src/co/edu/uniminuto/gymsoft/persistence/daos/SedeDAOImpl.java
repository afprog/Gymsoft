
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.SedeDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Sede;
 
 
 /***************************************************
 *DAO class of Sede table.
 *Generated on Thu Sep 12 21:23:18 COT 2013
 ***************************************************/
 
 
 public class SedeDAOImpl extends CustomDAOSupport<Sede, Long>  implements Serializable, SedeDAO {
 
 
	public SedeDAOImpl(){
		super( Sede.class);
	}
 
 /**
 * @return Sede
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> findAll(){

		Query query = getDAOManager().createQuery(" select t from Sede t");

		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Sede
 * @param: Sede
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public void save(Sede arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Sede
 * @param: Sede
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public void update(Sede arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Sede
 * @param: Sede
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public void delete(Sede arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Sede
 * @param: java.lang.Integer IdSede
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> getSedeByIdSede(Integer idSede){

		Query query = getDAOManager().createQuery(" select t from Sede t where t.idSede = ?1 ");

		query.setParameter(1, idSede);


		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Sede
 * @param: java.lang.Integer idSede
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> getSedeByIdSede(Integer idSede, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Sede t where t.idSede = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idSede);


		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Sede
 * @param: java.lang.String Nombre
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> getSedeByNombre(String nombre){

		Query query = getDAOManager().createQuery(" select t from Sede t where t.nombre = ?1 ");

		query.setParameter(1, nombre);


		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Sede
 * @param: java.lang.String nombre
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> getSedeByNombre(String nombre, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Sede t where t.nombre = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, nombre);


		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Sede
 * @param: java.lang.String Direccion
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> getSedeByDireccion(String direccion){

		Query query = getDAOManager().createQuery(" select t from Sede t where t.direccion = ?1 ");

		query.setParameter(1, direccion);


		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Sede
 * @param: java.lang.String direccion
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Sede
 */
	public List<Sede> getSedeByDireccion(String direccion, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Sede t where t.direccion = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, direccion);


		List<Sede> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
	 /**
	 * @return Sede
	 * @param: java.lang.Integer IdSede
	 * Generated on: Thu Sep 12 21:23:18 COT 2013
	 * @See Sede
	 */
		public List<Sede> getSedeById(Integer idSede){

			Query query = getDAOManager().createQuery(" select t from Sede t where t.idSedes IN  ('"+idSede+"') ");
			List<Sede> results = query.getResultList();

			if (results !=null && results.size() > 0) {
				return results;
			}

			return null;
		}
 
 }
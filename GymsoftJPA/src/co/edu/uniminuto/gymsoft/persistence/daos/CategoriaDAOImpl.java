
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.CategoriaDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Categoria;
 
 
 /***************************************************
 *DAO class of categoria table.
 *Generated on Thu Sep 12 21:23:17 COT 2013
 ***************************************************/
 
 
 public class CategoriaDAOImpl extends CustomDAOSupport<Categoria, Long>  implements Serializable, CategoriaDAO {
 
 
	public CategoriaDAOImpl(){
		super( Categoria.class);
	}
 
 /**
 * @return Categoria
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> findAll(){

		Query query = getDAOManager().createQuery(" select t from Categoria t");

		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Categoria
 * @param: Categoria
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public void save(Categoria arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Categoria
 * @param: Categoria
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public void update(Categoria arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Categoria
 * @param: Categoria
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public void delete(Categoria arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Categoria
 * @param: java.lang.Integer Idcategoria
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> getCategoriaByIdcategoria(Integer idcategoria){

		Query query = getDAOManager().createQuery(" select t from Categoria t where t.idcategoria = ?1 ");

		query.setParameter(1, idcategoria);


		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Categoria
 * @param: java.lang.Integer idcategoria
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> getCategoriaByIdcategoria(Integer idcategoria, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Categoria t where t.idcategoria = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idcategoria);


		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Categoria
 * @param: java.lang.String Descripcion
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> getCategoriaByDescripcion(String descripcion){

		Query query = getDAOManager().createQuery(" select t from Categoria t where t.descripcion = ?1 ");

		query.setParameter(1, descripcion);


		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Categoria
 * @param: java.lang.String descripcion
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> getCategoriaByDescripcion(String descripcion, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Categoria t where t.descripcion = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, descripcion);


		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Categoria
 * @param: java.lang.String Explicacion
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> getCategoriaByExplicacion(String explicacion){

		Query query = getDAOManager().createQuery(" select t from Categoria t where t.explicacion = ?1 ");

		query.setParameter(1, explicacion);


		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Categoria
 * @param: java.lang.String explicacion
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:17 COT 2013
 * @See Categoria
 */
	public List<Categoria> getCategoriaByExplicacion(String explicacion, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Categoria t where t.explicacion = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, explicacion);


		List<Categoria> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }
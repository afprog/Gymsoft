
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package co.edu.uniminuto.gymsoft.persistence.daos;
 
 
 import java.io.Serializable;
import java.util.List;

import javax.persistence.Query;

import co.edu.uniminuto.gymsoft.persistence.customdaos.CustomDAOSupport;
import co.edu.uniminuto.gymsoft.persistence.daos.controller.ObjetivoDAO;
import co.edu.uniminuto.gymsoft.persistence.model.Objetivo;
 
 
 /***************************************************
 *DAO class of objetivo table.
 *Generated on Thu Sep 12 21:23:18 COT 2013
 ***************************************************/
 
 
 public class ObjetivoDAOImpl extends CustomDAOSupport<Objetivo, Long>  implements Serializable, ObjetivoDAO {
 
 
	public ObjetivoDAOImpl(){
		super( Objetivo.class);
	}
 
 /**
 * @return Objetivo
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> findAll(){

		Query query = getDAOManager().createQuery(" select t from Objetivo t");

		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Objetivo
 * @param: Objetivo
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public void save(Objetivo arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Objetivo
 * @param: Objetivo
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public void update(Objetivo arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Objetivo
 * @param: Objetivo
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public void delete(Objetivo arg0){

		getDAOManager().remove(arg0);

	}
 
 /**
 * @return Objetivo
 * @param: java.lang.Integer Idobjetivo
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> getObjetivoByIdobjetivo(Integer idobjetivo){

		Query query = getDAOManager().createQuery(" select t from Objetivo t where t.idobjetivo = ?1 ");

		query.setParameter(1, idobjetivo);


		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Objetivo
 * @param: java.lang.Integer idobjetivo
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> getObjetivoByIdobjetivo(Integer idobjetivo, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Objetivo t where t.idobjetivo = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idobjetivo);


		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Objetivo
 * @param: java.lang.Integer UsuarioIdusuario
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> getObjetivoByUsuarioIdusuario(Integer usuarioIdusuario){

		Query query = getDAOManager().createQuery(" select t from Objetivo t where t.usuarioIdusuario = ?1 ");

		query.setParameter(1, usuarioIdusuario);


		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Objetivo
 * @param: java.lang.Integer usuarioIdusuario
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> getObjetivoByUsuarioIdusuario(Integer usuarioIdusuario, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Objetivo t where t.usuarioIdusuario = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, usuarioIdusuario);


		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Objetivo
 * @param: java.lang.String Descripcion
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> getObjetivoByDescripcion(String descripcion){

		Query query = getDAOManager().createQuery(" select t from Objetivo t where t.descripcion = ?1 ");

		query.setParameter(1, descripcion);


		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Objetivo
 * @param: java.lang.String descripcion
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Thu Sep 12 21:23:18 COT 2013
 * @See Objetivo
 */
	public List<Objetivo> getObjetivoByDescripcion(String descripcion, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Objetivo t where t.descripcion = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, descripcion);


		List<Objetivo> results = query.getResultList();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }